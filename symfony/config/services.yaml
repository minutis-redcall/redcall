# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'en'
  locale_list: [ 'fr', 'en', 'es', 'pt' ]
  locale_matcher: 'fr|en|es|pt'
  google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
  communication.processor: 'App\Communication\Processor\TaskProcessor'
  user_entity: 'App\Entity\User'
  home_route: 'home'
  long_url: 'https://redcall.minutis.croix-rouge.fr'
  whitelisted_base_redirect_urls:
    - "http://127.0.0.1:8000/"
    - "http://localhost/"
    - "https://localhost/"
    - "https://rcl.re/"
    - "https://redcall.minutis.croix-rouge.fr/"

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means

  _instanceof:
    Bundles\GoogleTaskBundle\Contracts\TaskInterface:
      tags: [ 'google_task' ]

  # configures session storage on the database
  Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
    arguments:
      - '@Doctrine\DBAL\Driver\PDOConnection'
      - { lock_mode: 1 }

  Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider: ~

  Doctrine\DBAL\Driver\PDOConnection:
    factory: [ '@doctrine.dbal.default_connection', 'getWrappedConnection' ]

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: [ 'controller.service_arguments' ]

  App\Provider\SMS\SMSProvider:
    class: App\Provider\SMS\TwilioWithStatusAsTask
    public: true

  App\Provider\Call\CallProvider:
    class: App\Provider\Call\Twilio
    public: true

  App\Provider\Email\EmailProvider:
    class: App\Provider\Email\Sendgrid
    public: true

  App\Provider\Storage\StorageProvider:
    class: App\Provider\Storage\GoogleCloudStorage
    public: true

  App\Provider\Minutis\MinutisProvider:
    class: App\Provider\Minutis\Minutis
    public: true

  App\Communication\Processor\ProcessorInterface:
    class: '%communication.processor%'

  App\Repository\MessageRepository:
    arguments: [ '@doctrine', '@translator', '@security.token_storage' ]

  App\Logger\ContextProcessor:
    arguments: [ '@kernel', '@security.token_storage' ]
    tags:
      - { name: monolog.processor }

  App\EventSubscriber\CommunicationActivitySubscriber:
    tags:
      - { name: doctrine.event_listener, event: postPersist }
      - { name: doctrine.event_listener, event: postUpdate }

  Bundles\PasswordLoginBundle\Repository\UserRepositoryInterface:
    class: App\Repository\UserRepository
    arguments: [ '@Doctrine\Common\Persistence\ManagerRegistry' ]

  Bundles\PasswordLoginBundle\Services\Mail:
    class: App\Services\Mail
    arguments:
      - '@translator'
      - '@twig'
      - '@mailer'
      - '@Bundles\PasswordLoginBundle\Manager\UserManager'
      - '@App\Manager\UserManager'

  App\Provider\OAuth\GoogleConnect\GoogleConnect:
    arguments:
      $clientId: '%env(GOOGLE_CONNECT_CLIENT_ID)%'
      $clientSecret: '%env(GOOGLE_CONNECT_CLIENT_SECRET)%'

  twig.extension.intl:
    class: Twig\Extra\Intl\IntlExtension
    tags:
      - { name: twig.extension }

