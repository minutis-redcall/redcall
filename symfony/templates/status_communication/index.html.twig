{% extends 'base.html.twig' %}
{% import 'macros.html.twig' as macros %}
{% import 'status_communication/macros.html.twig' as specificMacros %}

{% block body %}

    {# -------------------------------------------------------------------------------- #}
    {# Campaign label and color #}
    {# -------------------------------------------------------------------------------- #}
    <br/>
    <div class="row">
        <div class="col-12 h1" {% if campaign.active and is_granted('CAMPAIGN_OWNER', campaign) %}onclick="$('#change-campaign-label').modal();"{% endif %} style="cursor: pointer;">
            {% if not campaign.active %}
                <strike>{{ campaign.label }}</strike>
            {% else %}
                {{ campaign.label }}
            {% endif %}
            {% if not campaign.active %}
                <em>({{ 'campaign.statuses.finished'|trans|lower }})</em>
            {% elseif is_granted('CAMPAIGN_OWNER', campaign) %}
                <span class="float-right badge badge-light" style="cursor:pointer;">✏️</span>
            {% endif %}
        </div>
        {% if operationUrl %}
            <div class="col-12 skip-line">
                {{ 'form.operation.url'|trans }} <a href="{{ operationUrl }}" target="_blank">{{ operationUrl }}</a>
            </div>
        {% endif %}
        <div class="col-12 skip-line" {% if campaign.active and is_granted('CAMPAIGN_OWNER', campaign) %}onclick="$('#change-color').modal();"{% endif %} style="cursor:pointer;">
            {% set hexColor = constant('App\\Entity\\Campaign::COLORS')[campaign.type] %}
            <div id="current-color" class="w-100 text-center text-white badge" style="background-color:{{ hexColor }};">
                {{ ('campaign.types.' ~ campaign.type)|trans }}
                {% if campaign.active and is_granted('CAMPAIGN_OWNER', campaign) %}
                    <span>✏️</span>
                {% endif %}
            </div>
        </div>
    </div>

    {# -------------------------------------------------------------------------------- #}
    {# Notes associated with the campaign #}
    {# -------------------------------------------------------------------------------- #}
    <div class="col-12 skip-line" id="campaign-notes" data-notes-updated-timestamp="{{ campaign.notesUpdatedAt ? campaign.notesUpdatedAt|date('U') : 0 }}">
        <div id="campaign-notes-border" style="padding: 5px; margin: 0px -10px; border: 1px solid black;background-color:#eeeeee;">
            {% if campaign.active %}
                <span class="float-right badge" onclick="$('#change-notes').modal();" style="cursor:pointer;padding-bottom:3px;">✏️</span>
            {% endif %}
            <div id="campaign-notes-content" class="text-to-hypertext">
                {% if not campaign.notes %}
                    {{ 'campaign_status.no_notes_yet'|trans }}
                {% else %}
                    {{ campaign.notes|nl2br }}
                {% endif %}
            </div>
            <div class="text-right" style="padding-top:5px;">
                <em id="campaign-notes-last-update">
                    {% if campaign.notesUpdatedAt %}
                        {{ 'campaign_status.notes_updated_at'|trans({
                            '%date%': campaign.notesUpdatedAt|date('d/m/Y'),
                            '%time%': campaign.notesUpdatedAt|date('H:i'),
                        }) }}
                    {% endif %}
                </em>
                <a href="#" id="campaign-notes-ack" class="btn btn-sm btn-danger d-none">OK</a>
            </div>
        </div>
    </div>

    <div class="row justify-content-md-center">

        {# -------------------------------------------------------------------------------- #}
        {# Tabs to switch between campaign's communications #}
        {# -------------------------------------------------------------------------------- #}
        {% if campaign.communications|length > 1 %}

            <div class="col-12">
                <h5>{{ 'campaign_status.communication_tabs'|trans }}</h5>
                <ul class="nav nav-tabs" id="communications-menu" role="tablist">
                    {% for key, communication in campaign.communications %}
                        <li class="nav-item">
                            <a id="{{ communication.id }}-tab" data-toggle="tab" class="nav-link {{ key ?: 'active' }}"
                               href="#tab-{{ communication.id }}" role="tab" aria-controls="{{ communication.id }}">
                                {{ macros.communicationIcon(communication) }}
                                {% if communication.label %}
                                    {{ communication.label }}
                                {% else %}
                                    {{ 'campaign_status.communication_short_title'|trans({'%date%': communication.createdAt|date('d/m/Y'), '%time%': communication.createdAt|date('H:i')}) }}
                                {% endif %}
                            </a>
                        </li>
                    {% endfor %}
                </ul>
            </div>

            <div class="col-12"><br/></div>

        {% endif %}

        <div class="tab-content col-12" id="all-tabs">

            {% for key, communication in campaign.communications %}
                {% set answerCount = communication.choices|length %}

                <div class="tab-pane fade {{ key == 0 ? 'show active' : '' }}" id="tab-{{ communication.id }}"
                     role="tabpanel" aria-labelledby="{{ communication.id }}-tab">

                    {# -------------------------------------------------------------------------------- #}
                    {# Communication title #}
                    {# -------------------------------------------------------------------------------- #}
                    <h3 onclick="$('#change-communication-label-{{ communication.id }}').modal();" style="cursor:pointer;">
                        {{ macros.communicationIcon(communication) }}
                        {% if communication.label %}
                            {{ communication.label }}
                        {% else %}
                            {{ 'campaign_status.communication_title'|trans({'%date%': communication.createdAt|date('d/m/Y'), '%time%': communication.createdAt|date('H:i')}) }}
                        {% endif %}
                        <span class="color-grey" style="font-size: 14px;">(#{{ communication.id }})</span>
                        {% if campaign.active %}
                            <span class="float-right badge badge-light">✏️</span>
                        {% endif %}
                    </h3>
                    {% if communication.label %}
                        <p>{{ 'campaign_status.communication_title'|trans({'%date%': communication.createdAt|date('d/m/Y'), '%time%': communication.createdAt|date('H:i')}) }}</p>
                    {% endif %}
                    <div class="clearfix"></div>

                    {# -------------------------------------------------------------------------------- #}
                    {# Progression #}
                    {# -------------------------------------------------------------------------------- #}
                    <div class="progress position-relative" style="background-color:darkgray;height:18px;">
                        <div id="progress-bar-{{ communication.id }}"
                             class="progress-bar {% if progress[communication.id].sent >= progress[communication.id].reachable %}bg-success{% endif %}"
                             role="progressbar"
                             style="width: {{ progress[communication.id].percent }}%;"
                             aria-valuenow="{{ progress[communication.id].percent }}"
                             aria-valuemin="0"
                             aria-valuemax="100"></div>
                        <span id="progress-text-{{ communication.id }}"
                              class="justify-content-center d-flex position-absolute w-100 text-white">
                            {% if progress[communication.id].sent >= progress[communication.id].reachable %}
                                {{ 'campaign_status.finish'|trans({
                                    '%type%': ('message.' ~ communication.type ~ '.type')|trans,
                                    '%sent%': progress[communication.id].sent,
                                    '%replies%': progress[communication.id].replies,
                                    '%replies_pct%': progress[communication.id]['replies-percent'],
                                }) }}
                            {% else %}
                                {{ 'campaign_status.progress'|trans({
                                    '%type%': ('message.' ~ communication.type ~ '.type')|trans,
                                    '%sent%': progress[communication.id].sent,
                                    '%total%': progress[communication.id].total,
                                    '%progress%': progress[communication.id].percent
                                }) }}
                            {% endif %}
                        </span>
                        <div id="progress-trans-key-{{ communication.id }}"
                             class="d-none">{{ 'campaign_status.progress'|trans }}</div>
                    </div>

                    {# -------------------------------------------------------------------------------- #}
                    {# Message (shorten and normal version) #}
                    {# -------------------------------------------------------------------------------- #}
                    <div id="limited-body-{{ communication.id }}" class="email-body">
                        <strong>{{ communication.limitedBody|striptags }}</strong>
                        {% if communication.canExpandBody %}
                            <a href="#" class="show-complete-body" data-communication-id="{{ communication.id }}">🔽️</a>
                        {% endif %}
                        {% if communication.volunteer or is_granted('ROLE_ADMIN') %}
                            <div class="float-right color-grey" style="font-weight: normal;" {% if communication.volunteer %}title="{{ communication.volunteer.externalId }}"{% endif %}>
                                {{ macros.communicationBy(communication) }}

                                {% if communication.volunteer and is_granted('ROLE_ADMIN') %}
                                    <span style="color:black;">/</span>
                                {% endif %}

                                {# -------------------------------------------------------------------------------- #}
                                {# Relaunch button (for admins only) #}
                                {# -------------------------------------------------------------------------------- #}
                                {% if is_granted('ROLE_ADMIN') %}
                                    <a href="{{ path('communication_relaunch', {communication: communication.id, campaign: campaign.id}) }}" onclick="return confirm('{{ 'campaign_status.relaunch_communication_confirm'| trans }}');">
                                        {{ 'campaign_status.relaunch_communication'| trans }}
                                    </a>
                                {% endif %}
                            </div>
                        {% endif %}
                    </div>
                    <div id="complete-body-{{ communication.id }}" class="d-none email-body">
                        {% if communication.subject %}
                            <br/>
                            <div class="text-center h4">{{ communication.subject }}</div>
                        {% endif %}
                        {% if communication.type in [constant('App\\Entity\\Communication::TYPE_EMAIL')] %}
                            {{ communication|format_email }}
                        {% else %}
                            {{ communication.body|nl2br }}
                        {% endif %}
                        <a href="#" class="show-limited-body" data-communication-id="{{ communication.id }}">🔼️</a>
                    </div>
                    <br/>

                    {# -------------------------------------------------------------------------------- #}
                    {# Table containing message and answers #}
                    {# -------------------------------------------------------------------------------- #}
                    <table class="table">
                        <tbody>
                        {% for choice in communication.choices %}
                            <tr>
                                <td>{{ 'campaign_status.answer_no'|trans({'%choice%': choice.code}) }}</td>
                                <td>
                                    <div id="choice-{{ choice.id }}">
                                        <a href="#"
                                           class="filter-response"
                                           data-communication-id="{{ communication.id }}"
                                           data-target="filter-is-choice-{{ choice.id }}-{{ communication.id }}">
                                            {{ choice.label }}
                                        </a>
                                        (<span id="choice-count-{{ choice.id }}" data-count="{{ choice.count }}">{{ choice.count }}</span>)
                                        {% if campaign.choiceShouldCreateResource(choice) %}
                                            🚑
                                        {% endif %}
                                    </div>
                                </td>
                            </tr>
                        {% endfor %}
                        <tr>
                            <td>
                                {% if answerCount %}
                                    {{ 'campaign_status.answer_invalid'|trans }}
                                {% else %}
                                    {{ 'campaign_status.answer'|trans }}
                                {% endif %}
                            </td>
                            <td>
                                <a href="#"
                                   id="has-invalid-answer-{{ communication.id }}"
                                   class="filter-response"
                                   data-communication-id="{{ communication.id }}"
                                   data-count="{{ communication.invalidAnswersCount }}"
                                   data-target="filter-has-invalid-answer-{{ communication.id }}">
                                    {{ communication.invalidAnswersCount }}
                                </a>
                            </td>
                        </tr>

                        {% if answerCount %}
                            <tr>
                                <td>
                                    {{ 'campaign_status.answer_none'|trans }}
                                </td>
                                <td>
                                    <a href="#"
                                       id="has-no-answers-{{ communication.id }}"
                                       class="filter-response"
                                       data-communication-id="{{ communication.id }}"
                                       data-count="{{ communication.noAnswersCount }}"
                                       data-target="filter-has-no-answers-{{ communication.id }}">
                                        {{ communication.noAnswersCount }}
                                    </a>
                                </td>
                            </tr>
                        {% endif %}

                        </tbody>
                    </table>

                    {# -------------------------------------------------------------------------------- #}
                    {# Filter by responses or skills... #}
                    {# -------------------------------------------------------------------------------- #}
                    <div class="skip-line text-small">
                        {{ 'campaign_status.filter.title'|trans }}
                        {% set commonStructures = app.user.getCommonStructures(campaignStructures) %}
                        {% if commonStructures > 1 %}
                            <a href="#"
                               id="link-filter-structure-{{ communication.id }}"
                               onclick="$('#filter-structure-{{ communication.id }}').modal(); return false;">{{ 'campaign_status.filter.by_structure'|trans }}</a>
                            {{ 'campaign_status.filter.or'|trans }}
                        {% endif %}
                        <a href="#"
                           id="link-filter-response-{{ communication.id }}"
                           onclick="$('#filter-response-{{ communication.id }}').modal(); return false;">{{ 'campaign_status.filter.by_response'|trans }}</a>
                        {{ 'campaign_status.filter.or'|trans }}
                        <a href="#"
                           id="link-filter-skill-{{ communication.id }}"
                           onclick="$('#filter-skill-{{ communication.id }}').modal(); return false;">{{ 'campaign_status.filter.by_skill'|trans }}</a>
                        {{ 'campaign_status.filter.or'|trans }}
                        <a href="#" id="link-filter-unreachable-{{ communication.id }}" class="filter-unreachable" data-value="0">{{ 'campaign_status.filter.by_unreachable'|trans }}</a>
                    </div>

                    {# -------------------------------------------------------------------------------- #}
                    {# Results #}
                    {# -------------------------------------------------------------------------------- #}
                    <table class="table">
                        <thead>
                        <tr>
                            <th width="5%">
                                <label class="switch">
                                    <input class="select-all" data-communication-id="{{ communication.id }}"
                                           type="checkbox"/>
                                    <span class="slider"></span>
                                </label>
                            </th>
                            <th width="95%">&nbsp;</th>
                        </tr>
                        </thead>
                        <tbody id="top-{{ communication.id }}">
                        {% for message in communication.messages %}
                            {% set suffix = communication.id ~ '-' ~ message.id %}
                            {% set volunteer = message.volunteer %}
                            <tr id="row-{{ suffix|e('html_attr') }}"
                                class="row-{{ communication.id }}"
                                data-volunteer-id="{{ volunteer.id }}"
                                data-structures="{{ volunteer.structureIds|join(',') }}"
                                data-is-reachable="{{ message.reachable }}"
                                data-has-answer="{{ message.answers.count }}">

                                {# Selection #}
                                <td id="message-selected-{{ suffix|e('html_attr') }}"
                                    data-communication-id="{{ communication.id }}">
                                    <label class="switch">
                                        <input id="select-{{ suffix }}"
                                               class="volunteer-selection volunteer-selection-{{ communication.id }}"
                                               data-communication-id="{{ communication.id }}"
                                               data-suffix="{{ suffix|e('html_attr') }}"
                                               type="checkbox"/>
                                        <span class="slider"></span>
                                    </label>
                                </td>

                                <td id="volunteer-{{ suffix }}">

                                    <div class="float-right">

                                        {% if app.environment == 'dev' %}
                                            <a class="btn btn-default"
                                            {% if communication.type == constant('App\\Entity\\Communication::TYPE_SMS') %}
                                                {% if message.volunteer.phoneNumber %}
                                                    target="_blank" href="{{ path('sandbox_fake_sms_thread', {e164: message.volunteer.phoneNumber, campaignId: campaign.id}) }}">{{ macros.communicationIcon(communication) }}</a>
                                                {% else %}
                                                    href="#">&nbsp;</a>
                                                {% endif %}
                                            {% elseif communication.type == constant('App\\Entity\\Communication::TYPE_CALL') %}
                                                {% if message.volunteer.phoneNumber %}
                                                    target="_blank" href="{{ path('sandbox_fake_call_read', {e164: message.volunteer.phoneNumber, campaignId: campaign.id}) }}">{{ macros.communicationIcon(communication) }}️</a>
                                                {% else %}
                                                    href="#">&nbsp;</a>
                                                {% endif %}
                                            {% else %}
                                                {% if message.volunteer.email %}
                                                    target="_blank" href="{{ path('sandbox_fake_email_read', {email: message.volunteer.email, campaignId: campaign.id}) }}">{{ macros.communicationIcon(communication) }}️</a>
                                                {% else %}
                                                    href="#">&nbsp;</a>
                                                {% endif %}
                                            {% endif %}
                                        {% endif %}

                                        {% if is_granted('ROLE_ADMIN') and message.messageId %}
                                            <a href="#" class="provider-modal" data-href="{{ path('communication_provider_information', {
                                                campaignId: campaign.id,
                                                messageId: message.id,
                                            }) }}">ℹ️</a>
                                        {% endif %}

                                        {# Answer codes when volunteer answered them #}
                                        {% if answerCount %}
                                            {% for choice in communication.choices %}
                                                {% set answer = message.getAnswerByChoice(choice) %}
                                                <span class="{{ answer ? '' : 'd-none' }} badge badge-dark message-is-choice-{{ choice.id }}-{{ communication.id }}"
                                                      style="font-size:16px;"
                                                      data-value="{{ answer ? 1 : 0 }}"
                                                      id="message-is-choice-{{ choice.id }}-{{ suffix|e('html_attr') }}">
                                                    {{ choice.code }}
                                                    <span style="font-size:10px;">
                                                        <br/>
                                                        <span id="message-is-choice-time-{{ choice.id }}-{{ suffix|e('html_attr') }}">
                                                            {% if answer %}
                                                                {{ answer.receivedAt|date('H:i') }}
                                                            {% endif %}
                                                        </span>
                                                    </span>
                                                </span>
                                            {% endfor %}
                                        {% endif %}

                                        {# Volunteer sent an invalid answer #}
                                        <span class="{{ message.invalidAnswer ? '' : 'd-none' }} badge badge-dark message-has-invalid-answer-{{ communication.id }}"
                                              style="font-size:16px;"
                                              data-value="{{ message.invalidAnswer ? 1 : 0 }}"
                                              id="message-has-invalid-answer-{{ suffix|e('html_attr') }}">
                                            ?
                                            <span style="font-size:10px;">
                                                <br/>
                                                <span id="message-has-invalid-answer-time-{{ suffix|e('html_attr') }}">
                                                    {% if message.invalidAnswer %}
                                                        {{ message.invalidAnswer.receivedAt|date('H:i') }}
                                                    {% endif %}
                                                </span>
                                            </span>
                                        </span>

                                        <span class="d-none message-has-no-answers-{{ communication.id }}"
                                              data-value="{{ message.hasAnswer ? 0 : 1 }}"
                                              id="message-has-no-answers-{{ suffix|e('html_attr') }}"></span>

                                        {% if campaign.active %}
                                            <span id="open-message-{{ suffix }}"
                                                  data-message-id="{{ message.id }}"
                                                  class="open-message" style="cursor:pointer;">✏️</span>
                                        {% endif %}

                                        <div class="d-none">
                                            {% for skill in message.volunteer.badges %}
                                                <div class="message-is-skill-{{ skill.id|e('html_attr') }}-{{ communication.id }}" data-value=1></div>
                                            {% endfor %}
                                        </div>
                                    </div>

                                    <div id="volunteer-container-{{ suffix }}" class="{% if not message.sent %}text-black-50{% elseif message.error %}message.error{% endif %}">
                                        {{ macros.volunteer(message.volunteer) }}
                                    </div>

                                    {# Unexpected error #}
                                    <div id="error-{{ suffix }}" style="color:red;">
                                        {{ message.error|trans }}
                                    </div>
                                    <div>
                                        <span id="message-is-unclear-{{ suffix }}" class="{{ message.isUnclear ? '' : 'd-none' }}" style="color:red;font-size:10px;">
                                            <strong>⚠️ {{ 'campaign_status.answers.unclear'|trans }}</strong>
                                        </span>
                                        <span id="invalid-answer-raw-{{ suffix }}" style="font-size:10px;">
                                            {% if message.invalidAnswer %}
                                                {{ message.invalidAnswer.raw }}
                                            {% endif %}
                                            {% if message.isUnclear %}
                                                {{ message.unclear.raw }}
                                            {% endif %}
                                        </span>
                                        {% if campaign.active %}
                                            <a id="answer-link-{{ suffix }}"
                                               style="font-size:10px;"
                                               href="#"
                                               onclick="return false;"
                                               data-message-id="{{ message.id }}"
                                               class="open-message {% if communication.type != constant('App\\Entity\\Communication::TYPE_SMS') or (not message.isUnclear and not message.invalidAnswer) %}d-none{% endif %}">
                                                {{ 'campaign_status.answers.answer_link'|trans }}
                                            </a>
                                        {% endif %}
                                    </div>
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                    <div class="clearfix"></div>

                    {# -------------------------------------------------------------------------------- #}
                    {# Actions on selected rows #}
                    {# -------------------------------------------------------------------------------- #}
                    <div class="row" id="selection-{{ communication.id }}">

                        {# New message to selection #}
                        {% if campaign.active %}

                            <div class="col-md-3 col-12 skip-line">
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-primary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        {{ 'campaign_status.selection.new_message'|trans }}
                                    </button>
                                    <div class="dropdown-menu">
                                        {{ specificMacros.newMessage(campaign, communication, constant('App\\Entity\\Communication::TYPE_SMS')) }}
                                        {{ specificMacros.newMessage(campaign, communication, constant('App\\Entity\\Communication::TYPE_CALL')) }}
                                        {{ specificMacros.newMessage(campaign, communication, constant('App\\Entity\\Communication::TYPE_EMAIL')) }}
                                    </div>
                                </div>
                            </div>

                        {% endif %}

                        {# Download CSV #}
                        <div class="col-md-3 col-12 skip-line">
                            <button
                                    class="btn btn-primary download-csv-button"
                                    data-communication-id="{{ communication.id }}"
                                    data-timeout-disabled="30000">
                                {{ 'campaign_status.selection.download_csv'|trans }}
                            </button>
                            <form id="selection-download-csv-form-{{ communication.id }}"
                                  action="{{ path('export_csv', {id: communication.id}) }}"
                                  method="post" class="d-none">
                                <input type="hidden" name="csrf" value="{{ csrf_token('communication') }}"/>
                                <input type="hidden" name="volunteers"
                                       id="selection-download-csv-field-{{ communication.id }}" value=""/>
                            </form>
                        </div>

                        {# Download PDF #}
                        <div class="col-md-3 col-12 skip-line">
                            <button
                                    class="btn btn-primary download-pdf-button"
                                    data-communication-id="{{ communication.id }}"
                                    data-timeout-disabled="30000">
                                {{ 'campaign_status.selection.download_portrait_pdf'|trans }}
                            </button>
                            <form id="selection-download-pdf-form-{{ communication.id }}"
                                  action="{{ path('export_pdf', {id: communication.id}) }}"
                                  method="post" class="d-none">
                                <input type="hidden" name="csrf" value="{{ csrf_token('communication') }}"/>
                                <input type="hidden" name="volunteers"
                                       id="selection-download-pdf-field-{{ communication.id }}" value=""/>
                            </form>
                        </div>

                        {# Open / Close campaign #}
                        <div class="col-md-3 col-12 skip-line">
                            {% if is_granted('CAMPAIGN_OWNER', campaign) %}
                                {% if campaign.active %}
                                    <a href="{{ path('close_campaign', { id: campaign.id, csrf: csrf_token('campaign') }) }}"
                                       class="btn btn-warning" role="button">
                                        {{ 'campaign.actions.close'|trans }}
                                    </a>
                                    <p>
                                        {{ 'campaign.actions.expires'|trans }}
                                        <a href="#" id="closed-at">{{ campaign.expiresAt|date('d/m/Y H:i') }}</a>
                                    </p>
                                {% else %}
                                    <a href="{{ path('open_campaign', { id: campaign.id, csrf: csrf_token('campaign') }) }}"
                                       class="btn btn-danger" role="button">
                                        {{ 'campaign.actions.open'|trans }}
                                    </a>
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>

                    {% if is_granted('ROLE_ADMIN') and communication.raw %}
                        <br/>
                        <div class="debug text-center" data-target="debug-{{ communication.id }}">🔧</div>
                        <div id="debug-{{ communication.id }}" class="d-none">
                            <pre>{{ communication.raw }}</pre>
                        </div>
                        <br/>
                    {% endif %}

                </div>
            {% endfor %}

        </div>

    </div>

{% endblock %}

{% block modals %}

    {# -------------------------------------------------------------------------------- #}
    {# Change campaign label #}
    {# -------------------------------------------------------------------------------- #}
    {% if campaign.active %}
        {% set body %}
            <form id="rename-campaign" action="{{ path('rename_campaign', {id: campaign.id}) }}" method="post">
                <input type="text" class="form-control" name="new_name" value="{{ campaign.label }}"/>
                <input type="hidden" name="csrf" value="{{ csrf_token('campaign') }}"/>
            </form>
        {% endset %}

        {% set buttons %}
            <button type="button" class="btn btn-primary"
                    onclick="$('#rename-campaign').submit();">{{ 'base.form.change'|trans }}</button>
        {% endset %}

        {{ macros.modal('change-campaign-label', 'modal.change_campaign_label'|trans, body, buttons) }}
    {% endif %}

    {# -------------------------------------------------------------------------------- #}
    {# Change campaign color #}
    {# -------------------------------------------------------------------------------- #}
    {% if campaign.active %}
        {% set body %}
            {% for color, hexColor in constant('App\\Entity\\Campaign::COLORS') %}
                <a href="{{ path('color_campaign', app.request.query.all|merge({id: campaign.id, color: color, csrf: csrf_token('campaign')})) }}"
                   class="btn btn-primary text-white border-0 w-100"
                   style="background-color:{{ hexColor }};">
                    {{ ('campaign.types.' ~ color)|trans }}
                </a>

                <br/><br/>
            {% endfor %}
        {% endset %}

        {{ macros.modal('change-color', 'modal.change_color'|trans, body) }}
    {% endif %}

    {# -------------------------------------------------------------------------------- #}
    {# Change campaign notes #}
    {# -------------------------------------------------------------------------------- #}
    {% if campaign.active %}
        {% set body %}
            <form id="change-notes-form" action="{{ path('notes_campaign', {id: campaign.id}) }}" method="post">
                <textarea class="form-control" style="width:100%" rows=15 name="notes">{{ campaign.notes }}</textarea>
                <input type="hidden" name="csrf" value="{{ csrf_token('campaign') }}"/>
            </form>
        {% endset %}

        {% set buttons %}
            <button type="button" class="btn btn-primary"
                    onclick="$('#change-notes-form').submit();">{{ 'base.form.change'|trans }}</button>
        {% endset %}

        {{ macros.modal('change-notes', 'modal.change_campaign_notes'|trans, body, buttons) }}
    {% endif %}

    {% for key, communication in campaign.communications %}
        {% set answerCount = communication.choices|length %}

        {# -------------------------------------------------------------------------------- #}
        {# Change communication label #}
        {# -------------------------------------------------------------------------------- #}
        {% if campaign.active %}
            {% set body %}
                <form id="rename-communication-{{ communication.id }}"
                      action="{{ path('communication_rename', {campaignId: campaign.id, communicationId: communication.id}) }}"
                      method="post">
                    <input type="text" class="form-control" name="new_name" value="{{ communication.label }}"/>
                    <input type="hidden" name="csrf" value="{{ csrf_token('communication') }}"/>
                </form>
            {% endset %}

            {% set buttons %}
                <button type="button" class="btn btn-primary"
                        onclick="$('#rename-communication-{{ communication.id }}').submit();">{{ 'base.form.change'|trans }}</button>
            {% endset %}

            {{ macros.modal('change-communication-label-' ~ communication.id, 'modal.change_campaign_label'|trans, body, buttons) }}
        {% endif %}

        {# -------------------------------------------------------------------------------- #}
        {# Filter volunteers by their structures #}
        {# -------------------------------------------------------------------------------- #}

        {% set body %}

            {% set commonStructures = app.user.getCommonStructures(campaignStructures) %}
            {% for structure in commonStructures %}
                <div class="form-check">
                    <label class="switch">
                        <input type="checkbox"
                               data-toggle="toggle" data-onstyle="primary"
                               class="form-check-input filter-action filter-structure-{{ communication.id }} filter-action-{{ communication.id }}"
                               id="filter-structure-{{ structure.id }}-{{ communication.id }}"
                               value="{{ structure.id }}"/>
                        <span class="slider"></span>
                    </label>
                    <label class="form-check-label"
                           for="filter-structure-{{ structure.id }}-{{ communication.id }}">
                        {{ structure.displayName }}
                    </label>
                </div>
            {% endfor %}

        {% endset %}

        {{ macros.modal('filter-structure-' ~ communication.id, 'campaign_status.filter.title'|trans ~ ' ' ~ 'campaign_status.filter.by_structure'|trans, body) }}

        {# -------------------------------------------------------------------------------- #}
        {# Filter volunteers by their response #}
        {# -------------------------------------------------------------------------------- #}
        {% set body %}

            {% for index, choice in communication.choices %}
                <div class="form-check">
                    <label class="switch">
                        <input type="checkbox"
                               data-toggle="toggle" data-onstyle="primary"
                               data-choice-id="{{ choice.id }}"
                               class="form-check-input filter-action filter-response-{{ communication.id }} filter-response-{{ communication.id }} filter-action-{{ communication.id }}"
                               id="filter-is-choice-{{ choice.id }}-{{ communication.id }}"/>
                        <span class="slider"></span>
                    </label>
                    <label class="form-check-label"
                           for="filter-is-choice-{{ choice.id }}-{{ communication.id }}">
                        {{ choice.label }}
                    </label>
                </div>
            {% endfor %}

            <div class="form-check">
                <label class="switch">
                    <input type="checkbox"
                           data-toggle="toggle" data-onstyle="primary"
                           class="form-check-input filter-action filter-response-{{ communication.id }} filter-action-{{ communication.id }}"
                           id="filter-has-invalid-answer-{{ communication.id }}"/>
                    <span class="slider"></span>
                </label>
                <label class="form-check-label"
                       for="filter-has-invalid-answer-{{ communication.id }}">
                    {{ 'campaign_status.table.other'|trans }}
                </label>
            </div>

            <div class="form-check">
                <label class="switch">
                    <input type="checkbox"
                           data-toggle="toggle" data-onstyle="primary"
                           class="form-check-input filter-action filter-response-{{ communication.id }} filter-action-{{ communication.id }}"
                           id="filter-has-no-answers-{{ communication.id }}"/>
                    <span class="slider"></span>
                </label>
                <label class="form-check-label"
                       for="filter-has-no-answers-{{ communication.id }}">
                    {{ 'campaign_status.table.none'|trans }}
                </label>
            </div>

        {% endset %}

        {{ macros.modal('filter-response-' ~ communication.id, 'campaign_status.filter.title'|trans ~ ' ' ~ 'campaign_status.filter.by_response'|trans, body) }}

        {# -------------------------------------------------------------------------------- #}
        {# Filter volunteers by their skills #}
        {# -------------------------------------------------------------------------------- #}
        {% set body %}
            {% for skill in skills %}
                <div class="form-check">
                    <label class="switch">
                        <input type="checkbox"
                               class="form-check-input filter-action filter-skill-{{ communication.id }} filter-action-{{ communication.id }}"
                               id="filter-is-skill-{{ skill.id }}-{{ communication.id }}"/>
                        <span class="slider"></span>
                    </label>
                    <label class="form-check-label"
                           for="filter-is-skill-{{ skill.id }}-{{ communication.id }}">
                        {{ macros.badge(skill) }}
                    </label>
                </div>
            {% endfor %}
        {% endset %}

        {{ macros.modal('filter-skill-' ~ communication.id, 'campaign_status.filter.title'|trans ~ ' ' ~ 'campaign_status.filter.by_skill'|trans, body) }}

    {% endfor %}

    {# -------------------------------------------------------------------------------- #}
    {# Edit answers #}
    {# -------------------------------------------------------------------------------- #}
    {% if campaign.active %}
        {% set body %}

            <div id="modal-edit-answer"></div>

        {% endset %}

        {{ macros.modal('edit-answer', 'modal.answers'|trans, body) }}
    {% endif %}

    {# -------------------------------------------------------------------------------- #}
    {# See provider details #}
    {# -------------------------------------------------------------------------------- #}
    {% if is_granted('ROLE_ADMIN') %}
        <div class="modal fade" id="provider-modal" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 id="provider-modal-title" class="modal-title"></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div id="provider-modal-body" class="modal-body"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">{{ 'base.modal.close'|trans }}</button>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

{% endblock %}

{% block javascripts %}

    <script type="text/javascript">

        {# -------------------------------------------------------------------------------- #}
        {# Auto refresh information
        {# -------------------------------------------------------------------------------- #}

        var types = {
            sms: '{{ 'message.sms.type'|trans }}',
            call: '{{ 'message.call.type'|trans }}',
            email: '{{ 'message.email.type'|trans }}',
        };

        function refreshStatuses(data) {

            if ($('#campaign-notes').data('notes-updated-timestamp') != data['notes']['notes-updated-timestamp']) {

                {# Replace note contents #}
                if (data['notes']['content'] && data['notes']['content'].length > 0) {
                    $('#campaign-notes-content').html(data['notes']['content']);
                } else {
                    $('#campaign-notes-content').html('{{ 'campaign_status.no_notes_yet'|trans|e('js') }}');
                }

                {# Replace last update date #}
                $('#campaign-notes-last-update').html(
                    '{{ 'campaign_status.notes_updated_at'|trans|e('js') }}'
                        .replace('%date%', data['notes']['notes-updated-date'])
                        .replace('%time%', data['notes']['notes-updated-time'])
                );

                $('#campaign-notes').data('notes-updated-timestamp', data['notes']['notes-updated-timestamp']);

                refreshTextToHypertext();

                {# Applying visual effects to notice the note updates #}
                $('#campaign-notes-border').css('border', '5px solid red');
                $('#campaign-notes-last-update').css('color', 'red');
                $('#campaign-notes-ack').removeClass('d-none');
            }

            $.each(data['communications'], function (communicationId, communication) {
                var hasInvalidAnswers = 0;
                var hasNoAnswers = 0;
                $.each(communication.msg, function (messageId, messageStatus) {
                    var suffix = communicationId + '-' + messageId;
                    var row = $('#row-' + suffix);

                    {# Message is sent #}
                    if (messageStatus.sent) {
                        $('#volunteer-container-' + suffix).removeClass('text-black-50');
                    }

                    {# Message is "<value>" #}
                    $.each(messageStatus.choices, function (choiceId, isChoice) {
                        if (isChoice) {
                            $('#message-is-choice-' + choiceId + '-' + suffix).removeClass('d-none');
                            $('#message-is-choice-time-' + choiceId + '-' + suffix).html(isChoice);
                        } else {
                            $('#message-is-choice-' + choiceId + '-' + suffix).addClass('d-none');
                        }

                        $('#message-is-choice-' + choiceId + '-' + suffix).data('value', isChoice ? 1 : 0);
                    });

                    {# Message has ambiguous answer #}
                    if (messageStatus['has-unclear-answer']['raw']) {
                        if ('{{ constant('App\\Entity\\Communication::TYPE_SMS') }}' == communication.type) {
                            $('#answer-link-' + suffix).removeClass('d-none');
                        }
                        $('#message-is-unclear-' + suffix).removeClass('d-none');
                        $('#invalid-answer-raw-' + suffix).html(messageStatus['has-unclear-answer']['raw']).removeClass('d-none');
                    } else {
                        $('#message-is-unclear-' + suffix).addClass('d-none');
                    }

                    {# Message has a new answer #}
                    if (messageStatus['has-answer'] !== row.data('has-answer')) {
                        row.prependTo($('#top-' + communicationId));
                        row.data('has-answer', messageStatus['has-answer']);
                    }

                    {# an error occured while sending message #}
                    if (messageStatus['error']) {
                        $('#error-' + suffix).html(messageStatus['error']).removeClass('d-none');
                    }

                    {# Message has invalid answer #}
                    if (messageStatus['has-invalid-answer']['raw']) {
                        if ('{{ constant('App\\Entity\\Communication::TYPE_SMS') }}' == communication.type) {
                            $('#answer-link-' + suffix).removeClass('d-none');
                        }
                        $('#message-has-invalid-answer-' + suffix).removeClass('d-none');
                        $('#message-has-invalid-answer-time-' + suffix).html(messageStatus['has-invalid-answer']['time']);
                        $('#invalid-answer-raw-' + suffix).html(messageStatus['has-invalid-answer']['raw']).removeClass('d-none');
                        hasInvalidAnswers++;
                    } else if (0 === messageStatus['has-answer']) {
                        hasNoAnswers++;
                    } else {
                        if (!messageStatus['has-unclear-answer']['raw']) {
                            $('#message-has-invalid-answer-' + suffix).addClass('d-none');
                            $('#invalid-answer-raw-' + suffix).addClass('d-none');
                        }
                    }
                    $('#message-has-invalid-answer-' + suffix).data('value', messageStatus['has-invalid-answer']['raw'] ? 1 : 0);

                    {# Hide "Answer" link when there are no rendered responses #}
                    if (!messageStatus['has-invalid-answer']['raw'] && !messageStatus['has-unclear-answer']['raw']) {
                        $('#answer-link-' + suffix).addClass('d-none');
                    }

                    {# Show "refresh" on opened answer modal if new message received #}
                    var refreshAnswer = $('#refresh-answers-' + messageId);
                    if (refreshAnswer.length && messageStatus['has-answer'] !== refreshAnswer.data('count')) {
                        refreshAnswer.removeClass('d-none');
                    }
                });

                {# Refresh the SMS sending progress bar #}
                var progressBar = $('#progress-bar-' + communicationId);
                if (communication.progress.sent >= communication.progress.reachable && !progressBar.hasClass('bg-success')) {
                    progressBar.addClass('bg-success');
                }
                progressBar.attr('aria-valuenow', communication.progress.percent);
                progressBar.css('width', communication.progress.percent + '%');

                if (communication.progress.sent >= communication.progress.reachable) {
                    $('#progress-text-' + communicationId).html(
                        '{{ 'campaign_status.finish'|trans|e('js') }}'
                            .replace('%sent%', communication.progress.sent)
                            .replace('%replies%', communication.progress.replies)
                            .replace('%replies_pct%', communication.progress['replies-percent'])
                            .replace('%type%', types[communication.progress.type])
                    );
                } else {
                    $('#progress-text-' + communicationId).html(
                        $('#progress-trans-key-' + communicationId).html()
                            .replace('%sent%', communication.progress.sent)
                            .replace('%total%', communication.progress.total)
                            .replace('%progress%', communication.progress.percent)
                            .replace('%cost%', communication.progress.cost)
                            .replace('%type%', types[communication.progress.type])
                    );
                }

                $.each(communication.choices, function (choiceId, count) {
                    var choice = $('#choice-count-' + choiceId);
                    if (count !== choice.data('count')) {
                        choice.html(count);
                        choice.animate({fontSize: '50px'}, 500).animate({fontSize: '1rem'}, 500);
                        choice.data('count', count);
                    }
                });

                var invalid = $('#has-invalid-answer-' + communicationId);
                if (hasInvalidAnswers !== invalid.data('count')) {
                    invalid.html(hasInvalidAnswers);
                    invalid.animate({fontSize: '50px'}, 500).animate({fontSize: '1rem'}, 500);
                    invalid.data('count', hasInvalidAnswers);
                }

                var noAnswers = $('#has-no-answers-' + communicationId);
                if (hasNoAnswers !== noAnswers.data('count')) {
                    noAnswers.html(hasNoAnswers);
                    noAnswers.data('count', hasNoAnswers);
                }
            });

            refreshVisibility();
        }

        if ('{{ app.environment == 'dev' }}' !== '1') {
            var errorCount = 0;
            var hash = '{{ hash }}';
            var longPolling = function () {
                setTimeout(function () {
                    $.ajax('{{ path('communication_long_polling', {id: campaign.id}) }}', {
                        type: 'POST',
                        data: {
                            hash: hash,
                        },
                        success: function (result) {
                            errorCount = 0;
                            if (result) {
                                hash = result.hash;
                                refreshStatuses(result);
                            }
                            longPolling();
                        },
                        error: function () {
                            errorCount++;
                            if (100 === errorCount) {
                                window.location = '{{ path('home') }}';
                            } else {
                                longPolling();
                            }
                        }
                    });
                }, 1000);
            };
            longPolling();
        } else {
            setInterval(function () {
                $.ajax('{{ path('communication_short_polling', {id: campaign.id}) }}', {
                    type: 'POST',
                    statusCode: {
                        200: refreshStatuses,
                        401: function () {
                            document.location = '{{ path('home') }}';
                        },
                    }
                });
            }, 5000);
        }

        var communicationIds = [];
        {% for communication in campaign.communications %}
        communicationIds.push("{{ communication.id|e('js') }}");
        {% endfor %}

        {# -------------------------------------------------------------------------------- #}
        {# Filter rows according to ticked columns #}
        {# -------------------------------------------------------------------------------- #}

        function refreshVisibility() {

            var structures = [];
            {% for structure in campaignStructures %}
            structures.push("structure-{{ structure.id|e('js') }}");
            {% endfor %}

            var actions = [];
            {% for communication in campaign.communications %}
            actions["{{ communication.id|e('js') }}"] = [
                {% if communication.choices|length %}
                {% for choice in communication.choices %}
                "is-choice-{{ choice.id|e('js') }}",
                {% endfor %}
                {% endif %}
                "has-invalid-answer",
                "has-no-answers",
            ];
            {% endfor %}

            var skills = [];
            {% for skill in skills %}
            skills.push("is-skill-{{ skill.id|e('js') }}");
            {% endfor %}

            {#
            # Controlling each checkboxes:
            #
            # Each filter is inclusive on its category (if you select "Yes" and "No" in the response category,
            # you will get all volunteers who answered "Yes" --or-- "No").
            #
            # But, filter categories are exclusive each other (if you select "Yes" in the response category
            # and "Driver" in the skills category, you will get all volunteers that are drivers --and-- who
            # answered "Yes")
            #}
            $.each(communicationIds, function (key, communicationId) {
                {# counting number of filters ticked #}
                var structure = 0;
                $('.filter-structure-' + communicationId).each(function () {
                    structure += $(this).is(':checked');
                });

                var response = 0;
                $('.filter-response-' + communicationId).each(function () {
                    var that = $(this);
                    var checked = that.is(':checked');
                    response += checked;

                    // Response links
                    if (checked) {
                        $('#choice-' + that.data('choice-id') + ' a').css('color', 'red');
                    } else {
                        $('#choice-' + that.data('choice-id') + ' a').css('color', '');
                    }
                });

                if ($('#filter-has-invalid-answer-' + communicationId).is(':checked')) {
                    $('#has-invalid-answer-' + communicationId).css('color', 'red');
                } else {
                    $('#has-invalid-answer-' + communicationId).css('color', '');
                }

                if ($('#filter-has-no-answers-' + communicationId).is(':checked')) {
                    $('#has-no-answers-' + communicationId).css('color', 'red');
                } else {
                    $('#has-no-answers-' + communicationId).css('color', '');
                }

                var skill = 0;
                $('.filter-skill-' + communicationId).each(function () {
                    skill += $(this).is(':checked');
                });

                var unreachable = $('#link-filter-unreachable-' + communicationId).data('value');

                {# change links color to understand which filters are enabled #}
                if (structure) {
                    $('#link-filter-structure-' + communicationId).css('color', 'red');
                } else {
                    $('#link-filter-structure-' + communicationId).css('color', '');
                }
                if (response) {
                    $('#link-filter-response-' + communicationId).css('color', 'red');
                } else {
                    $('#link-filter-response-' + communicationId).css('color', '');
                }
                if (skill) {
                    $('#link-filter-skill-' + communicationId).css('color', 'red');
                } else {
                    $('#link-filter-skill-' + communicationId).css('color', '');
                }
                if (unreachable) {
                    $('#link-filter-unreachable-' + communicationId).css('color', 'red');
                } else {
                    $('#link-filter-unreachable-' + communicationId).css('color', '');
                }

                {# if no filter used, everything is visible #}
                if (structure + response + skill + unreachable === 0) {
                    $('.row-' + communicationId).fadeIn();
                    return true;
                }

                {# if some checkbox ticked, visible if at least one value is 1 #}
                $('.row-' + communicationId).each(function () {
                    var row = $(this);

                    {# is visible if structure ticked and volunteer in structure #}
                    var structureVisible = false;
                    var structureCount = 0;
                    $.each(structures, function (index, action) {
                        var suffix = action + '-' + communicationId;
                        var filter = $('#filter-' + suffix);
                        if (filter.is(':checked') && !$.inArray(filter.val(), row.data('structures').toString().split(','))) {
                            structureVisible = true;
                        }

                        structureCount += filter.is(':checked');
                    });
                    if (structureCount === 0) {
                        structureVisible = true;
                    }

                    {# is visible if answer ticked and volunteer answered OR if no answer selected #}
                    var actionVisible = false;
                    var actionCount = 0;
                    $.each(actions[communicationId], function (key, action) {
                        var suffix = action + '-' + communicationId;
                        if ($('#filter-' + suffix).is(':checked') && row.find('.message-' + suffix).data('value') === 1) {
                            actionVisible = true;
                        }
                        actionCount += $('#filter-' + suffix).is(':checked');
                    });
                    if (actionCount === 0) {
                        actionVisible = true;
                    }

                    {# is visible if skill ticked and volunteer has it OR if no skills selected #}
                    var skillVisible = false;
                    var skillCount = 0;
                    $.each(skills, function (key, action) {
                        var suffix = action + '-' + communicationId;
                        if ($('#filter-' + suffix).is(':checked') && row.find('.message-' + suffix).data('value') === 1) {
                            skillVisible = true;
                        }
                        skillCount += $('#filter-' + suffix).is(':checked');
                    });
                    if (skillCount === 0) {
                        skillVisible = true;
                    }

                    {# is visible if unreachable filter disabled or volunteer is reachable #}
                    var unreachableVisible = true;
                    if ($('#link-filter-unreachable-' + communicationId).data('value')) {
                        unreachableVisible = !row.data('is-reachable');
                    }

                    {# displays the row only if all conditions above are true #}
                    if (structureVisible && actionVisible && skillVisible && unreachableVisible) {
                        row.fadeIn();
                    } else {
                        row.fadeOut();
                        row.find('.volunteer-selection').prop('checked', false);
                    }
                });
            });
        }

        $('.filter-action').click(function () {
            refreshVisibility();
        });
        refreshVisibility();

        $('.filter-unreachable').click(function (e) {
            e.preventDefault();
            var that = $(this);
            that.data('value', 1 - that.data('value'));
            refreshVisibility();
        });

        {# -------------------------------------------------------------------------------- #}
        {# Volunteer selection #}
        {# -------------------------------------------------------------------------------- #}

        $('.select-all').click(function () {
            var communicationId = $(this).data("communication-id");

            $('.row-' + communicationId + ':hidden')
                .find('.volunteer-selection')
                .prop('checked', false);

            $('.row-' + communicationId + ':visible').each(function () {
                var selection = $(this).find('.volunteer-selection');
                if (selection.is(':checked')) {
                    selection.prop('checked', false);
                } else {
                    selection.prop('checked', true);
                }
            });

            $(this).prop('checked', false);
        });
        $('.select-all, .volunteer-selection').prop('checked', false);

        function getSelectedVolunteers(communicationId) {
            var volunteerIds = [];
            $('.row-' + communicationId + ':visible').each(function () {
                var row = $(this);
                var selection = row.find('.volunteer-selection');
                if (selection.is(':checked')) {
                    volunteerIds.push(row.data('volunteer-id'));
                }
            });
            if (!volunteerIds.length) {
                $('.row-' + communicationId + ':visible').each(function () {
                    volunteerIds.push($(this).data('volunteer-id'));
                });
            }
            return volunteerIds;
        }

        {# -------------------------------------------------------------------------------- #}
        {# Answers viewing #}
        {# -------------------------------------------------------------------------------- #}
        $('body').on('click', '.open-message', function () {
            $('#modal-edit-answer').html('');
            $('#edit-answer').modal();
            loadCommunicationAnswers($(this));
        });

        function loadCommunicationAnswers(elem) {
            $.get({
                url: '{{ path('communication_answers') }}',
                data: {
                    messageId: elem.data('message-id'),
                },
                success: function (data) {
                    $('#modal-edit-answer').html(data);
                }
            });
        }

        {# -------------------------------------------------------------------------------- #}
        {# Answers edition #}
        {# -------------------------------------------------------------------------------- #}
        $('body').on('change', '.answer-change', function () {
            var that = $(this);
            var endpoint = that.data('endpoint');
            var choiceId = that.data('choice-id');

            if (!that.data('multi')) {
                $('.answer-change').not(that).prop('checked', false);
            }

            $.post(endpoint, {
                choiceId: choiceId,
            }, function () {
                loadCommunicationAnswers(that);
            });
        });

        {# -------------------------------------------------------------------------------- #}
        {# Create new communication #}
        {# -------------------------------------------------------------------------------- #}
        $('.new-message-button').click(function (e) {
            e.preventDefault();
            var communicationId = $(this).data('communication-id');
            var type = $(this).data('type');
            $('#selection-new-message-field-' + communicationId + '-' + type).val(
                JSON.stringify(getSelectedVolunteers(communicationId))
            );
            $('#selection-new-message-form-' + communicationId + '-' + type).submit();
        });

        {# -------------------------------------------------------------------------------- #}
        {# Download selection #}
        {# -------------------------------------------------------------------------------- #}
        $('.download-csv-button').click(function (e) {
            e.preventDefault();
            var communicationId = $(this).data('communication-id');
            $('#selection-download-csv-field-' + communicationId).val(
                JSON.stringify(getSelectedVolunteers(communicationId))
            );
            $('#selection-download-csv-form-' + communicationId).submit();
        });

        $('.download-pdf-button').click(function (e) {
            e.preventDefault();
            var communicationId = $(this).data('communication-id');
            $('#selection-download-pdf-field-' + communicationId).val(
                JSON.stringify(getSelectedVolunteers(communicationId))
            );
            $('#selection-download-pdf-form-' + communicationId).submit();
        });

        {# -------------------------------------------------------------------------------- #}
        {# Filter responses using the table #}
        {# -------------------------------------------------------------------------------- #}
        $('.filter-response').click(function (e) {
            var that = $(this);

            var currentlyTicked = $('#' + that.data('target')).is(':checked');

            {# Untick all responses filters #}
            $('.filter-response-' + that.data('communication-id')).each(function () {
                var tick = $(this);
                if (tick.is(':checked')) {
                    tick.click();
                }
            });

            {# Tick the corresponding response #}
            if (!currentlyTicked) {
                $('#' + that.data('target')).click();
            }

            e.preventDefault();
        });

        {# -------------------------------------------------------------------------------- #}
        {# Toggle the message if it is large #}
        {# -------------------------------------------------------------------------------- #}
        $('.show-complete-body').click(function (e) {
            e.preventDefault();
            var that = $(this);
            var communicationId = that.data('communication-id');
            $('#complete-body-' + communicationId).removeClass('d-none');
            $('#limited-body-' + communicationId).addClass('d-none');
        });

        $('.show-limited-body').click(function (e) {
            e.preventDefault();
            var that = $(this);
            var communicationId = that.data('communication-id');
            $('#complete-body-' + communicationId).addClass('d-none');
            $('#limited-body-' + communicationId).removeClass('d-none');
        });

        {# -------------------------------------------------------------------------------- #}
        {# Debugging #}
        {# -------------------------------------------------------------------------------- #}
        $('.debug').click(function () {
            $('#' + $(this).data('target')).toggleClass('d-none');
        });

        {# -------------------------------------------------------------------------------- #}
        {# Transform text links into clickable links #}
        {# -------------------------------------------------------------------------------- #}
        function refreshTextToHypertext() {
            $('.text-to-hypertext').each(function () {
                var str = $(this).html();
                var regex = /(https?:\/\/([^\s]+))/ig
                var replaced_text = str.replace(regex, "<a href='$1' target='_blank'>$1</a>");
                $(this).html(replaced_text);
            });
        }

        refreshTextToHypertext();

        {# -------------------------------------------------------------------------------- #}
        {# Acknowledge notes updates #}
        {# -------------------------------------------------------------------------------- #}
        $('#campaign-notes-ack').click(function (e) {
            e.preventDefault();
            $('#campaign-notes-ack').addClass('d-none');
            $('#campaign-notes-border').css('border', '1px solid black');
            $('#campaign-notes-last-update').css('color', '');
        });

        {# -------------------------------------------------------------------------------- #}
        {# Extend event expiration date #}
        {# -------------------------------------------------------------------------------- #}
        $('#closed-at').click(function (e) {
            e.preventDefault();
            $.post('{{ path('keep_campaign', {id: campaign.id, csrf: csrf_token('campaign')}) }}', function (result) {
                $('#closed-at').html(result.expiresAt);
            });
        });


    </script>

    {# -------------------------------------------------------------------------------- #}
    {# Render provider details #}
    {# -------------------------------------------------------------------------------- #}
    {% if is_granted('ROLE_ADMIN') %}

        <script type="text/javascript">
            $('body').on('click', '.provider-modal', function (e) {
                e.preventDefault();
                $('#provider-modal-title').html('');
                $('#provider-modal-body').html('<img src="{{ asset('spinner.gif') }}"/>');
                $('#provider-modal').modal();
                $.post($(this).data('href'), function (data) {
                    $('#provider-modal-title').html(data.title);
                    $('#provider-modal-body').html(data.body);
                });
            });
        </script>

    {% endif %}

{% endblock %}
